diff --git a/src/LargeFileUpload/other-server/largeFileUpload/ali_large.js b/src/LargeFileUpload/other-server/largeFileUpload/ali_large.js
deleted file mode 100644
index 2ffddfa..0000000
--- a/src/LargeFileUpload/other-server/largeFileUpload/ali_large.js
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * @Date: 2024-03-18 13:34:27
- * @Description: description
- */
-const OSS = require('ali-oss');
-const path = require('path');
-
-const client = new OSS({
-  // yourregion填写Bucket所在地域。以华东1（杭州）为例，Region填写为oss-cn-hangzhou。
-  region: 'oss-cn-beijing',
-  // 从环境变量中获取访问凭证。运行本代码示例之前，请确保已设置环境变量OSS_ACCESS_KEY_ID和OSS_ACCESS_KEY_SECRET。
-  accessKeyId: 'LTAI5tKcowHmbyZHSR2STcNW',
-  accessKeySecret: 'bxFTrpNOdM4HALb17ZZuBTqvyi2M7V',
-  // 填写存储空间名称。
-  bucket: 'han-9999',
-});
-
-const progress = (p, _checkpoint) => {
-  // Object的上传进度。
-  console.log(p);
-  // 分片上传的断点信息。
-  console.log(_checkpoint);
-};
-
-const headers = {
-  // 指定Object的存储类型。
-  'x-oss-storage-class': 'Standard',
-  // 指定Object标签，可同时设置多个标签。
-  'x-oss-tagging': 'Tag1=1&Tag2=2',
-  // 指定初始化分片上传时是否覆盖同名Object。此处设置为true，表示禁止覆盖同名Object。
-  'x-oss-forbid-overwrite': 'true',
-};
-
-// 开始分片上传。
-async function multipartUpload() {
-  try {
-    // 依次填写Object完整路径（例如exampledir/exampleobject.txt）和本地文件的完整路径（例如D:\\localpath\\examplefile.txt）。Object完整路径中不能包含Bucket名称。
-    // 如果本地文件的完整路径中未指定本地路径（例如examplefile.txt），则默认从示例程序所属项目对应本地路径中上传文件。
-    const result = await client.multipartUpload(
-      '1事件循环.mp4',
-      path.normalize('D:\\学习视频\\1事件循环.mp4'),
-      {
-        progress,
-        // headers,
-        // 指定meta参数，自定义Object的元数据。通过head接口可以获取到Object的meta数据。
-        meta: {
-          year: 2020,
-          people: 'test',
-        },
-      },
-    );
-    console.log(result);
-    // 填写Object完整路径，例如exampledir/exampleobject.txt。Object完整路径中不能包含Bucket名称。
-    const head = await client.head('1事件循环.mp4');
-    console.log(head);
-  } catch (e) {
-    // 捕获超时异常。
-    if (e.code === 'ConnectionTimeoutError') {
-      console.log('TimeoutError');
-      // do ConnectionTimeoutError operation
-    }
-    console.log(e);
-  }
-}
-
-module.exports = multipartUpload;
diff --git a/src/LargeFileUpload/other-server/largeFileUpload/ten_large.js b/src/LargeFileUpload/other-server/largeFileUpload/ten_large.js
deleted file mode 100644
index 37a9891..0000000
--- a/src/LargeFileUpload/other-server/largeFileUpload/ten_large.js
+++ /dev/null
@@ -1,68 +0,0 @@
-// 通过 npm 安装 sdk npm install cos-nodejs-sdk-v5
-// SECRETID 和 SECRETKEY 请登录 https://console.cloud.tencent.com/cam/capi 进行查看和管理
-// nodejs 端可直接使用 CAM 密钥计算签名，建议用限制最小权限的子用户的 CAM 密钥
-// 最小权限原则说明 https://cloud.tencent.com/document/product/436/38618
-const COS = require('cos-nodejs-sdk-v5');
-const path = require('path');
-const fs = require('fs');
-const http = require('http');
-
-const Bucket = 'han-9999-1257066862';
-const Region = 'ap-nanjing';
-
-const cos = new COS({
-  SecretId: 'AKID44IJHC31Efw0qlhow2xjNGOlGxXt6B3l', // 推荐使用环境变量获取；用户的 SecretId，建议使用子账号密钥，授权遵循最小权限指引，降低使用风险。子账号密钥获取可参考https://cloud.tencent.com/document/product/598/37140
-  SecretKey: 'jXn6XAocQEwQgRI5nZKE1iMuOyncN1Y2', // 推荐使用环境变量获取；用户的 SecretKey，建议使用子账号密钥，授权遵循最小权限指引，降低使用风险。子账号密钥获取可参考https://cloud.tencent.com/document/product/598/37140
-});
-
-module.exports = class {
-  async init(req, res) {
-    // cos.multipartListPart(
-    //   {
-    //     Bucket, // 必须
-    //     Region, // 必须
-    //     Key: "flower.png", // 必须
-    //     UploadId: "17110028227f644a4dcfe555cd251d641bd6f43e866ca7e9594027a30d5db6f1a1683994f1", // 必须
-    //   },
-    //   function (err, data) {
-    //     if (err) {
-    //       // 处理请求出错
-    //       console.log(err);
-    //     } else {
-    //       // 处理请求成功
-    //       console.log(data);
-    //     }
-    //   }
-    // );
-    let dataVal = '';
-    // console.log(req, 38);
-    let eTag = '';
-    cos.multipartUpload(
-      {
-        Bucket, // 必须
-        Region, // 必须
-        Key: 'flower.png', // 必须
-        ContentLength: '1024',
-        UploadId:
-          '17110028227f644a4dcfe555cd251d641bd6f43e866ca7e9594027a30d5db6f1a1683994f1',
-        PartNumber: '1',
-        Body: fs.createReadStream('largeFileUpload/flower.png'),
-      },
-      function (err, data) {
-        console.log(1);
-        if (err) {
-          // 处理请求出错
-          console.log(err);
-        } else {
-          // 处理请求成功
-          console.log(data);
-        }
-        if (data) {
-          eTag = data.ETag;
-        }
-      },
-    );
-
-    const filePath = 'temp-file-to-upload'; // 本地文件路径
-  }
-};
